IMPORTANTE: Ejecutar los comandos en git bash de windows


===== Generar un archivo por cada commit ============

mkdir -p commits_html  # Crea la carpeta si no existe

# Obtener la cantidad total de commits para numerarlos
total_commits=$(git rev-list --count HEAD)
counter=1

git log --reverse --pretty=format:"%h|%s" | while IFS='|' read -r commit_hash commit_title; do
    # Reemplazar espacios y caracteres especiales en el título del commit para hacer un nombre válido
    sanitized_title=$(echo "$commit_title" | tr -cd '[:alnum:]-_ ' | tr ' ' '_')

    # Nombre del archivo con número de commit + hash + título del commit
    commit_file="commits_html/${counter}_${commit_hash}_${sanitized_title}.html"

    cat <<EOF > "$commit_file"
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>[$counter] Commit $commit_hash - $commit_title</title>
    <style>
        /* Modo Oscuro */
        body { 
            font-family: Arial, sans-serif; 
            max-width: 800px; 
            margin: auto; 
            padding: 20px; 
            background-color: #1e1e1e;  /* Fondo oscuro */
            color: #c9d1d9;  /* Texto claro */
        }
        h2 { 
            color: #58a6ff;  /* Azul claro */
            border-bottom: 2px solid #30363d; 
            padding-bottom: 5px;
        }
        pre { 
            background: #161b22;  /* Fondo más oscuro */
            color: #c9d1d9;  /* Texto claro */
            padding: 10px; 
            overflow-x: auto; 
            border-radius: 5px;
        }
        code { 
            font-family: "Courier New", Courier, monospace; 
        }
        .diff { 
            white-space: pre-wrap; 
            display: block;
        }
        .addition { 
            color: #28a745;  /* Verde */
            background-color: rgba(40, 167, 69, 0.2); /* Verde con transparencia */
            display: block;
        }
        .deletion { 
            color: #d73a49;  /* Rojo */
            background-color: rgba(215, 58, 73, 0.2); /* Rojo con transparencia */
            display: block;
        }
        /* Barra de scroll personalizada */
        ::-webkit-scrollbar {
            width: 10px;
        }
        ::-webkit-scrollbar-thumb {
            background: #30363d; 
            border-radius: 5px;
        }
        ::-webkit-scrollbar-track {
            background: #161b22;
        }
    </style>
</head>
<body>

EOF

    # Agregar información del commit
    git log -1 --pretty=format:"<h2>[$counter] Commit %h</h2><p><strong>Fecha:</strong> %ad</p><p><strong>Autor:</strong> %an</p><p><strong>Mensaje:</strong> %s</p><pre><code class='diff'>" --date=local "$commit_hash" >> "$commit_file"

    echo "</code></pre><pre><code class='diff'>" >> "$commit_file"
    
    # Agregar los cambios del commit escapando caracteres HTML
    git show "$commit_hash" --color=never | sed 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g;' >> "$commit_file"

    echo "</code></pre>" >> "$commit_file"

    # Agregar JavaScript mejorado para resaltar los cambios correctamente
    cat <<EOF >> "$commit_file"
<script>
    document.addEventListener("DOMContentLoaded", function() {
        document.querySelectorAll("code.diff").forEach(function(block) {
            let lines = block.innerHTML.split("\\n");
            for (let i = 0; i < lines.length; i++) {
                if (lines[i].startsWith("+")) {
                    lines[i] = "<span class='addition'>" + lines[i] + "</span>";
                } else if (lines[i].startsWith("-")) {
                    lines[i] = "<span class='deletion'>" + lines[i] + "</span>";
                }
            }
            block.innerHTML = lines.join("\\n");
        });
    });
</script>

</body>
</html>
EOF

    echo "Archivo creado: $commit_file"

    # Incrementar el contador
    ((counter++))

done

















===== FIN Generar un archivo por cada commit ============


==== Generar un solo archivo ====================


echo "<!DOCTYPE html>
<html lang='es'>
<head>
    <meta charset='UTF-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <title>Historial de Commits</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 800px; margin: auto; padding: 20px; background-color: #f7f7f7; }
        h2 { color: #0052cc; border-bottom: 2px solid #ccc; padding-bottom: 5px; }
        pre { background: #282c34; color: #ffffff; padding: 10px; overflow-x: auto; border-radius: 5px; }
        code { font-family: 'Courier New', Courier, monospace; }
        .diff { white-space: pre-wrap; }
        .addition { color: #28a745; background-color: #e6ffed; display: block; }
        .deletion { color: #d73a49; background-color: #ffeef0; display: block; }
    </style>
</head>
<body>" > commits.html

git log --reverse --pretty=format:"<h2>Commit %h</h2><p><strong>Fecha:</strong> %ad</p><p><strong>Autor:</strong> %an</p><p><strong>Mensaje:</strong> %s</p><pre><code class='diff'>" --date=local >> commits.html

git log --reverse --pretty=format:"%h" | while read commit_hash; do
    echo "</code></pre><pre><code class='diff'>" >> commits.html
    git show $commit_hash --color=never >> commits.html
    echo "</code></pre>" >> commits.html
done

echo "
<script>
    document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('code.diff').forEach(function(block) {
            let html = block.innerHTML
                .replace(/^(\+.*)$/gm, \"<span class='addition'>$1</span>\")  // Verde para añadidos
                .replace(/^(-.*)$/gm, \"<span class='deletion'>$1</span>\");  // Rojo para eliminados
            block.innerHTML = html;
        });
    });
</script>
</body>
</html>" >> commits.html


==== FIN Generar un solo archivo ====================